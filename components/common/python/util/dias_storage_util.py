import os

from .s3_util import S3Util


class DiasStorageUtil(object):
    '''DIAS storage access utility functions'''

    @staticmethod
    def get_csi_buckets_conf():
        '''
        Function establishing a connection with the "internal" s3 product storage 
        endpoint, returning an s3 storage object from which one can access the 
        endpoint content, as well as the "sip-aux", and "infra" buckets exact 
        name, where are respectively stored the auxiliary data and the infra data.
        '''

        csi_s3 = S3Util.get_s3(
            'https://s3.waw2-1.cloudferro.com',
            os.environ['CSI_INTERNAL_EC2_CREDENTIALS_ACCESS_KEY'],
            os.environ['CSI_INTERNAL_EC2_CREDENTIALS_SECRET_KEY']
            )
        buckets_names = {
            'sip_aux': 'hidden_value',
            'infra': 'foo'
        }
        return csi_s3, buckets_names


    @staticmethod
    def get_eoadata_bucket_conf():
        '''
        Function establishing a connection with the "EODATA" s3 product storage 
        endpoint, returning an s3 storage object from which one can access the 
        endpoint content, as well as the name of the EODATA bucket, to access 
        the input products.
        '''

        eodata_s3 = S3Util.get_s3(
            'http://data.cloudferro.com:80', 'access', 'access'
            )
        eodata_bucket = 'EODATA'
        return eodata_s3, eodata_bucket


    @staticmethod
    def get_product_bucket_conf():
        '''
        Function establishing a connection with the "processed products" s3 
        product storage endpoint, returning an s3 storage object from which one 
        can access the endpoint content, as well as the name of the bucket in 
        which are stored the products generated by the HR-S&I system.
        '''

        csi_products_s3 = S3Util.get_s3(
            'https://s3.waw2-1.cloudferro.com',
            os.environ['CSI_PRODUCTS_BUCKET_EC2_CREDENTIALS_ACCESS_KEY'],
            os.environ['CSI_PRODUCTS_BUCKET_EC2_CREDENTIALS_SECRET_KEY']
            )
        csi_products_bucket = 'HRSI'
        return csi_products_s3, csi_products_bucket